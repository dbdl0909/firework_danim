<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.danim.service">
	<!-- 레이팅카운트 업데이트 -->
	<update id="updateRatingCount"
			parameterType="com.danim.service.community.CommunityDto">
		<!-- UPDATE
			community
		SET
			community_rating = #{communityRating}
		WHERE
			community_no = #{communityNo}; -->
		UPDATE
			community
		SET
			community_rating = (SELECT * FROM(SELECT max(community_rating)+1 FROM  community cd WHERE community_no = #{communityNo}) as cd)
		WHERE
			community_no = #{communityNo}
	</update>
	<select id="selectRatingForVotedCheck"
			parameterType="java.util.Map"
			resultType="Integer">
		SELECT 
			count(member_id)
		FROM
			rating
		WHERE
			community_no = #{communityNo}
		AND	
			member_id = #{votedId}
	</select>
	<!-- 레이팅 삽입 -->
	<insert id="insertCommunityVote"
			parameterType="java.util.Map">
	INSERT INTO
		rating(
		member_id,
		community_no,
		community_category_no,
		rating_score,
		rating_date
	)VALUES(
		#{votedId},
		#{communityNo},
		#{communityCategoryNo},
		1,
		CURDATE()
	)
	</insert>
	<!-- 리플카운트 업데이트 -->
	<update id="updateReplyCount"
			parameterType="com.danim.service.community.CommunityDto">
		UPDATE
			community
		SET
			community_reply_count = #{communityReplyCount}
		WHERE
			community_no = #{communityNo};
	</update>
	<!-- 리플 입력 -->
	<insert id="insertCommunityReply" 
		parameterType="com.danim.service.community.CommunityReplyDto">
		INSERT INTO
		reply(
			community_no,
			community_category_no,
			member_id,
			reply_content,
			reply_date,
			reply_update	
		)VALUES(
			#{communityNo},
			#{communityCategoryNo},
			#{memberId},
			#{replyContent},	
			CURDATE(),
			CURDATE()
		);
	</insert>
	<!-- 리플 가져오기 -->
	<select id="selectDetailViewReplyByCommunityNo"
			parameterType="Integer"
			resultType="com.danim.service.community.CommunityReplyDto">
		SELECT
			rpl.reply_no as replyNo,
			rpl.community_category_no as communityCategoryNo,
			rpl.member_id as memberId,
			rpl.reply_content as replyContent,
			rpl.reply_update as replyDate
		FROM
			community as com, reply as rpl
		WHERE
			com.community_no = rpl.community_no
		AND
			rpl.community_no = #{communityNo};	
	</select>

	<update id="updateReadCount"
			parameterType="com.danim.service.community.CommunityDto">
		UPDATE
			community
		SET
			community_readcount = #{communityReadcount}
		WHERE
			community_no = #{communityNo};
	</update>
	<update id="modifyCommunityItem"
			parameterType="com.danim.service.community.CommunityDto">
		UPDATE
			community
		SET
			community_subject = #{communitySubject},
			<if test="communityNotice == null">
				community_notice = 'F',
			</if>
			<if test="communityNotice != null">
				community_notice = #{communityNotice},
			</if>
			community_content = #{communityContent}
		WHERE
			community_no = #{communityNo};	
	</update>
	<!-- 공지사항 출력리스트  -->
	<select id="selectCommunityNoticeList"
		parameterType="String"
		resultType="com.danim.service.community.CommunityDto">
		SELECT 
			community_no as communityNo,
			member_id as memberId,
			community_category_no as communityCategoryNo,
			community_subject as communitySubject,
			community_readcount as communityReadcount,
			community_notice as communityNotice,
			community_rating as communityRating,
			community_update as communityUpdate,
			community_reply_count as communityReplyCount			
		FROM
			community
		WHERE
			community_category_no = #{communityCategoryNo}
		AND
			community_notice = 'T'	
		ORDER BY communityNo DESC	
	</select>
	<!-- 해당 카테고리 내의 총 게시글 수-->
	<select id="countCommunityList" 
		parameterType="java.util.Map"
		resultType="Integer" >
	<choose>
		<when test="searchInput ==''">	
			SELECT 
				COUNT(*) 
			FROM 
				community
			WHERE 
				community_category_no = #{communityCategoryNo};
		</when>
		<when test="searchInput !=''">
			SELECT 
				COUNT(*) 
			FROM 
				community
			WHERE 
				community_category_no = #{communityCategoryNo}
			AND
			<choose>
				<when test="searchOption == 'title'">
					community_subject LIKE CONCAT('%',#{searchInput},'%')
				</when>
				<when test="searchOption == 'contents'">
					community_content LIKE CONCAT('%',#{searchInput},'%')
				</when>
				<when test="searchOption == 'author'">
					member_id LIKE CONCAT('%',#{searchInput},'%')
				</when>
			</choose>	
		</when>	
	</choose>	
	</select>
	
	<!-- 나의 QNA 리스트 수 -->
	<select id="countMyQnaList" 
		parameterType="java.util.Map"
		resultType="Integer">
			SELECT 
				COUNT(*) 
			FROM 
				community
			WHERE 
				community_category_no = #{communityCategoryNo}
			AND
				member_id = #{memberId}			
			<choose>
				<when test="searchOption == 'title'">
				AND	community_subject LIKE CONCAT('%',#{searchInput},'%')
				</when>
				<when test="searchOption == 'contents'">
				AND	community_content LIKE CONCAT('%',#{searchInput},'%')
				</when>
				<otherwise>
				
				</otherwise>
			</choose>
	</select>	
		
	<!-- 해당 게시글 detail -->
	<select id="selectDetailViewByCommunityNo"
			parameterType="Integer"
			resultType="com.danim.service.community.CommunityDto">
		SELECT
			community_no as communityNo,
			community_category_no as communityCategoryNo,
			community_notice as communityNotice,
			member_id as memberId,
			community_subject as communitySubject,
			community_content as communityContent,
			community_readcount as communityReadcount,
			community_rating as communityRating,
			community_update as communityUpdate,
			community_reply_count as communityReplyCount	
		FROM
			community
		WHERE
			community_no = #{communityNo};
	
	</select> 
	<!-- 해당 카테고리 리스트 -->
	<select id="selectCommunityList"
			parameterType="java.util.Map"
			resultType="com.danim.service.community.CommunityDto">
		<choose>	
			<when test="searchInput == ''">
				SELECT 
					community_no as communityNo,
					member_id as memberId,
					community_category_no as communityCategoryNo,
					community_subject as communitySubject,
					community_readcount as communityReadcount,
					community_notice as communityNotice,
					community_rating as communityRating,
					community_update as communityUpdate,
					community_content as communityContent,
					community_reply_count as communityReplyCount					
				FROM
					community
				WHERE
					community_category_no = #{communityCategoryNo}
				AND
					community_ban = 'F'	
				ORDER BY communityNo DESC	
				LIMIT #{pageNation.startRow} , #{pageNation.linePerPage};
			</when>
			<when test="searchInput != ''">
				SELECT 
					community_no as communityNo,
					member_id as memberId,
					community_category_no as communityCategoryNo,
					community_subject as communitySubject,
					community_readcount as communityReadcount,
					community_notice as communityNotice,
					community_rating as communityRating,
					community_update as communityUpdate,
					community_content as communityContent,
					community_reply_count as communityReplyCount									
				FROM
					community
				WHERE
					community_category_no = #{communityCategoryNo}
				AND
				<choose>
					<when test="searchOption == 'title'">
						community_subject LIKE CONCAT('%',#{searchInput},'%')
					</when>
					<when test="searchOption == 'contents'">
						community_content LIKE CONCAT('%',#{searchInput},'%')
					</when>
					<when test="searchOption == 'author'">
						member_id LIKE CONCAT('%',#{searchInput},'%')
					</when>
				</choose>
				AND
					community_ban = 'F'
				ORDER BY communityNo DESC	
				LIMIT #{pageNation.startRow} , #{pageNation.linePerPage}
			</when>
		</choose>	
	</select>
	<!-- 게시글 입력 -->	
	<insert 
		id="insertCommunityItem" 
		parameterType="com.danim.service.community.CommunityDto">
		INSERT INTO
		community(
			community_no,
			community_category_no,
			member_id,
			community_subject,
			<if test="communityNotice != null">
				community_notice,
			</if>
			community_content,
			community_date,
			community_update	
		)VALUES(
			#{communityNo},
			#{communityCategoryNo},
			#{memberId},
			#{communitySubject},
			<if test="communityNotice != null">
				#{communityNotice},
			</if>
			#{communityContent},
			CURDATE(),
			CURDATE()
		);
	</insert>
	<!-- 나의 QNA 리스트 조회 -->
	<select
		id="selectQnaByMemberId"
		parameterType="String"
		resultType="com.danim.service.community.QnaDto">
		SELECT
			community_no as 'communityNo',
			community_category_no as 'communityCategoryNo',
			plan_no as 'planNo',
			member_id as 'memberId',
			community_subject as 'communitySubject',
			community_content as 'communityContent',
			community_readcount as 'communityReadcount',
			community_date as 'communityDate',
			community_update as 'communityUpdate',
			community_reply_count as 'communityReplyCount'
		FROM
			community
		WHERE
			member_id = #{memberId}	
		AND 
			community_category_no = #{communityCategoryNo}
		AND
			community_ban = 'F'	
		<choose>
			<when test="searchOption == 'title'">
			AND	community_subject LIKE CONCAT('%',#{searchInput},'%')
			</when>
			<when test="searchOption == 'contents'">
			AND	community_content LIKE CONCAT('%',#{searchInput},'%')
			</when>
			<otherwise>
			
			</otherwise>
		</choose>
		ORDER BY communityNo DESC	
		LIMIT #{pageNation.startRow} , #{pageNation.linePerPage}		
	</select>
	<!-- 관리자용 전체 회원 QNA 리스트 조회 -->
	<select
		id="selectQnaForAdmin"
		parameterType="String"
		resultType="com.danim.service.community.QnaDto">
		SELECT
			community_no as 'communityNo',
			community_category_no as 'communityCategoryNo',
			plan_no as 'planNo',
			member_id as 'memberId',
			community_subject as 'communitySubject',
			community_content as 'communityContent',
			community_readcount as 'communityReadcount',
			community_date as 'communityDate',
			community_update as 'communityUpdate',
			community_reply_count as 'communityReplyCount'
		FROM
			community
		WHERE 
			community_category_no = #{communityCategoryNo}
		AND
			community_ban = 'F'	
		<choose>
			<when test="searchOption == 'title'">
			AND	community_subject LIKE CONCAT('%',#{searchInput},'%')
			</when>
			<when test="searchOption == 'contents'">
			AND	community_content LIKE CONCAT('%',#{searchInput},'%')
			</when>
			<when test="searchOption == 'author'">
				member_id LIKE CONCAT('%',#{searchInput},'%')
			</when>			
		</choose>
		ORDER BY communityNo DESC	
		LIMIT #{pageNation.startRow} , #{pageNation.linePerPage}		
	</select>	
	<!-- 정지 및 삭제 게시글 보관 -->
	<insert 
		id="insertDeleteCommunity"
		parameterType="int">
		INSERT INTO
		delete_community(
			community_no,
			delete_community_date
		)VALUES(
			#{communityNo},
			CURDATE()
		)
	</insert>
	<!-- 해당게시글 삭제 및 정지 (해당 게시글 안보이게) -->
	<update 
		id="deleteCommunity"
		parameterType="int">
		UPDATE 
			community
		SET
			community_ban = 'T'
		WHERE
			community_no = #{communityNo}
	</update>
	<!-- 게시글 및 리플 신고 -->
	<insert
		id="insertReport"
		parameterType="com.danim.service.community.ReportDto">
		INSERT INTO
			report(
				member_id,
				community_no,
				reply_no,
				report_reason,
				report_date				
			)VALUES(
				#{memberId},
				#{communityNo},
				#{replyNo},
				#{reportReason},
				CURDATE()
			)
	</insert>
	<!-- 신고리스트 출력 -->
	<select id="selectReportList"
			resultType="com.danim.service.community.ReportDto">
		SELECT
			re.report_no as 'reportNo',
			re.member_id as 'memberId',
			re.community_no as 'communityNo',
			re.reply_no as 'replyNo',
			re.report_reason as 'reportReason',
			re.report_date as 'reportDate',
			(
				SELECT
					COUNT(community_no)
				FROM
					report
				WHERE
					community_no = re.community_no
			) as 'reportCount'
		FROM
			report re
		ORDER BY
			reportCount DESC,
			communityNo DESC

	</select>
	<!-- 신고게시글 수정 -->
	<update id="updateCommunityBan"
			parameterType="Map">
		UPDATE                
			community          
		SET                   
			community_ban = 'T',
			community_ban_reason = '${communityBanReason}'
		WHERE                 
			community_no = #{communityNo}
	</update>
	<!-- 신고게시글 이동 -->
	<insert id="insertCommunityBan"
			parameterType="int">
		INSERT INTO
			delete_community (
				community_no,
				delete_community_date
			) VALUES (
				#{communityNo},
				CURDATE()
			)
	</insert>
	<delete id="deleteReportNo"
			parameterType="Map">
		DELETE FROM
			report
		WHERE
			report_no = #{reportNo}
	</delete>
</mapper>	
