<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.danim.service.RecommandMapper">
	<!-- 성별 간 선호하는 지역 순위  -->
	<select id="selectCityForGender"
			parameterType="String"
			resultType="com.danim.service.recommand.RecommandDto">
		SELECT
			info.city_info_name as 'cityRankName',
			COUNT(route.city_route_departure_city) as 'cityRankCount'
		FROM
			plan as pl
		JOIN
			member_info as member
		ON
			pl.member_id = member.member_id
		JOIN
			city_route as route
		ON
			route.plan_no = pl.plan_no
		JOIN
			city_info as info
		ON
			info.city_info_no = route.city_route_departure_city				
		WHERE
			member.member_info_gender = #{gender}
		GROUP BY
			route.city_route_departure_city
		ORDER BY
			COUNT(route.city_route_departure_city) DESC
		LIMIT
			5		
	</select>
	<!-- 20대 선호 도시 -->	
	<select id="selectCityForTwenty"
			resultType="com.danim.service.recommand.RecommandDto">
		SELECT
			city.city_route_departure_city as 'cityRankName',
			COUNT(city.city_route_departure_city) as 'cityRankCount'
		FROM
			plan as pl
		JOIN
			member_info as member
		ON
			pl.member_id = member.member_id
		JOIN
			city_route as city
		ON
			city.plan_no = pl.plan_no
		WHERE
			member.member_info_birth <![CDATA[ > ]]> '1986-01-01'
		AND
			member.member_info_birth <![CDATA[ < ]]> '1997-12-31'
		GROUP BY
			city.city_route_departure_city
		ORDER BY
			COUNT(city.city_route_departure_city) DESC
	</select>
	<!-- 가장 많이 찾은 도시 -->
	<select id="selectPopularityCity"
			resultType="com.danim.service.recommand.RecommandDto">
		SELECT
			if(SUBSTRING(route.city_route_departure_city, 9) <![CDATA[ < ]]> 74, info.city_info_do_name, info.city_info_name) as 'cityRankName',
			COUNT(route.city_route_departure_city) as 'cityRankCount'
		FROM
			plan as pl
		JOIN
			member_info as member
		ON
			pl.member_id = member.member_id
		JOIN
			city_route as route
		ON
			route.plan_no = pl.plan_no
		JOIN
			city_info as info
		ON
			info.city_info_no = route.city_route_departure_city	
		GROUP BY
			cityRankName
		ORDER BY
			COUNT(route.city_route_departure_city) DESC
	</select>
	<!-- 20대 계절 별 여행 순위 -->
	<select id="selectSeasonCityTwenty"
			parameterType="hashMap"
			resultType="Integer">
		SELECT
			COUNT(pl.plan_name) as cityRankName
		FROM
			plan as pl
		JOIN
			member_info as member
		ON
			pl.member_id = member.member_id
		WHERE
			DATE_FORMAT(member.member_info_birth, '%Y') <![CDATA[ > ]]> '1986'
		AND
			DATE_FORMAT(member.member_info_birth, '%Y') <![CDATA[ < ]]> '1997'
		<choose>
			<when test="_parameter.equals('spring')">
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 6
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 2			
			</when>
			<when test="_parameter.equals('summer')">
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 9
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 5				
			</when>
			<when test="_parameter.equals('fall')">
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 12
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 8			
			</when>
			<when test="_parameter.equals('winter')">
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 3
				OR
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 11			
			</when>									
		</choose>	
	</select>
	<!-- 30대 계절 별 여행 순위 -->
	<select id="selectSeasonCityThirty"
			parameterType="hashMap"
			resultType="Integer">
		SELECT
			COUNT(pl.plan_name) as cityRankName
		FROM
			plan as pl
		JOIN
			member_info as member
		ON
			pl.member_id = member.member_id
		WHERE
			DATE_FORMAT(member.member_info_birth, '%Y') <![CDATA[ > ]]> '1976'
		AND
			DATE_FORMAT(member.member_info_birth, '%Y') <![CDATA[ < ]]> '1987'
		<choose>
			<when test="_parameter.equals('spring')">
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 6
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 2			
			</when>
			<when test="_parameter.equals('summer')">
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 9
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 5				
			</when>
			<when test="_parameter.equals('fall')">
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 12
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 8			
			</when>
			<when test="_parameter.equals('winter')">
				AND
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 3
				OR
					DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 11			
			</when>									
		</choose>	
	</select>	
	<!-- 여행 타입별 여행 순위 -->	
	<select id="selectCityByPlanType"
			parameterType="String"
			resultType="com.danim.service.recommand.RecommandDto">
		SELECT
			info.city_info_name as 'cityRankName',
			COUNT(route.city_route_departure_city) as 'cityRankCount'
		FROM
			plan as pl
		JOIN
			member_info as member
		ON
			pl.member_id = member.member_id
		JOIN
			city_route as route
		ON
			route.plan_no = pl.plan_no
		JOIN
			city_info as info
		ON
			info.city_info_no = route.city_route_departure_city
		WHERE
			pl.plan_type = #{planType}	
		GROUP BY
			route.city_route_departure_city
		ORDER BY
			COUNT(route.city_route_departure_city) DESC
		LIMIT
			10		
	</select>
	<!-- 성별로 구분한 전국 도 / 특별광역시 여행 순위 -->
	<select id="selectCityAllByGender"
			parameterType="String"
			resultType="com.danim.service.recommand.RecommandDto">
		SELECT
			if(SUBSTRING(route.city_route_departure_city, 9) <![CDATA[ < ]]> 74, info.city_info_do_name, info.city_info_name) as 'cityRankName',
			COUNT(route.city_route_departure_city) as 'cityRankCount'
		FROM
			plan as pl
		JOIN
			member_info as member
		ON
			pl.member_id = member.member_id
		JOIN
			city_route as route
		ON
			route.plan_no = pl.plan_no
		JOIN
			city_info as info
		ON
			info.city_info_no = route.city_route_departure_city
		WHERE
			member.member_info_gender = #{gender}
		GROUP BY
			cityRankName
		ORDER BY
			COUNT(route.city_route_departure_city) DESC
	</select>
	<!-- 도에서 인기있는 시  여행순위 -->		
	<select id="selectCityByProvince"
			parameterType="String"
			resultType="com.danim.service.recommand.RecommandDto">
	SELECT
		info.city_info_name as 'cityRankName',
		COUNT(route.city_route_departure_city) as 'cityRankCount'
	FROM
		plan as pl
	JOIN
		member_info as member
	ON
		pl.member_id = member.member_id
	JOIN
		city_route as route
	ON
		route.plan_no = pl.plan_no
	JOIN
		city_info as info
	ON
		info.city_info_no = route.city_route_departure_city
	WHERE
		info.city_info_do_name = #{province}
	GROUP BY
		cityRankName
	ORDER BY
		COUNT(route.city_route_departure_city) DESC
	</select>
	<!-- 플랜 타입간 순위 -->
	<select id="selectTypeRank"
			resultType="com.danim.service.recommand.RecommandDto">
	SELECT
		pl.plan_type as 'cityRankName',
		COUNT(pl.plan_type) as 'cityRankCount'
	FROM
		plan as pl
	JOIN
		member_info as member
	ON
		pl.member_id = member.member_id
	JOIN
		city_route as route
	ON
		route.plan_no = pl.plan_no
	JOIN
		city_info as info
	ON
		info.city_info_no = route.city_route_departure_city
	GROUP BY
		pl.plan_type
	ORDER BY
		COUNT(route.city_route_departure_city) DESC				
	</select>
	<!-- 년도별 계절 여행 도시 순위 -->
	<select id="selectSeasonCityByYear"
			parameterType="hashmap"
			resultType="com.danim.service.recommand.RecommandDto">
	SELECT
		info.city_info_name as 'cityRankName',
		COUNT(route.city_route_departure_city) as 'cityRankCount'
	FROM
		plan as pl
	JOIN
		member_info as member
	ON
		pl.member_id = member.member_id
	JOIN
		city_route as route
	ON
		route.plan_no = pl.plan_no
	JOIN
		city_info as info
	ON
		info.city_info_no = route.city_route_departure_city
	WHERE
		DATE_FORMAT(pl.plan_departure, '%Y') = #{year}
	<choose>
		<when test="season.equals('spring')">
			AND
				DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 6
			AND
				DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 2			
		</when>
		<when test="season.equals('summer')">
			AND
				DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 9
			AND
				DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 5				
		</when>
		<when test="season.equals('fall')">
			AND
				DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 12
			AND
				DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 8			
		</when>
		<when test="season.equals('winter')">
			AND
				(
				DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ < ]]> 3
			OR
				DATE_FORMAT(pl.plan_departure, '%c') <![CDATA[ > ]]> 11		
				)		
		</when>									
	</choose>
	GROUP BY
		route.city_route_departure_city
	ORDER BY
		COUNT(route.city_route_departure_city) DESC
	LIMIT 10	
	</select>
	<!-- 로그인 회원 성별, 나이 정보 조회 -->
	<select id="selectMemberInfo"
			parameterType="String"
			resultType="java.util.Map">	
	SELECT
		FLOOR((TO_DAYS(CURDATE())-(TO_DAYS(member_info_birth)))/365) as 'memberAge',
		member_info_gender as 'memberGender'
	FROM
		member_info
	WHERE
		member_id = #{memberId}
	</select>
	<!-- 로그인 회원과 비슷한 정보를 가진 회원에게 추천하는 도시 -->
	<select id="selectCityForMember"
			parameterType="hashmap"
			resultType="com.danim.service.recommand.RecommandDto">
	SELECT
		info.city_info_name as 'cityRankName',
		COUNT(route.city_route_departure_city) as 'cityRankCount'
	FROM
		plan as pl
	JOIN
		member_info as member
	ON
		pl.member_id = member.member_id
	JOIN
		city_route as route
	ON
		route.plan_no = pl.plan_no
	JOIN
		city_info as info
	ON
		info.city_info_no = route.city_route_departure_city	
	WHERE
		SUBSTRING(#{age}, 1, 1) = SUBSTRING((FLOOR((TO_DAYS(CURDATE())-(TO_DAYS(member_info_birth)))/365)), 1, 1)
	AND
		member.member_info_gender = #{gender}	
	GROUP BY
		route.city_route_departure_city
	ORDER BY
		COUNT(route.city_route_departure_city) DESC
	LIMIT
		5	
	</select>
</mapper>